
#include <iostream>
#include <fstream>

#define MAPWIDTH 64
#define MAPHEIGHT 32

int mapdata[MAPWIDTH*MAPHEIGHT] = {0};

void generateMap()
{
	for (int i = 0; i < MAPHEIGHT; ++i){
		for (int j = 0; j < MAPWIDTH; ++j){
			mapdata[(i*MAPWIDTH) + j] = (rand()%5);
		}
	}
}

void smoothMap()
{
	for (int i = 1; i < MAPHEIGHT; ++i){
		for (int j = 1; j < MAPWIDTH; ++j){
			if ( (rand()%10) < 7){
				unsigned char a = 0;
				a += mapdata[(i*MAPWIDTH) + j-1];
				a += mapdata[(i*MAPWIDTH) + j];
				a += mapdata[((i-1)*MAPWIDTH) + j-1];
				a += mapdata[((i-1)*MAPWIDTH) + j];
				a = a/4;
				mapdata[(i*MAPWIDTH) + j] = a;
			}
		}
	}
}

void main()
{
	generateMap();
	smoothMap();

	std::ofstream file;
	file.open("C:/Projects/LimitSky/MapGeneration/output/output.h");
	file << "// Generated by Gordon Mckendrick's Map Generator" << std::endl;

	file << "#define MAPWIDTH " << MAPWIDTH << std::endl;
	file << "#define MAPHEIGHT " << MAPHEIGHT << std::endl;
	file << "const unsigned char map[MAPWIDTH * MAPHEIGHT] = {" << std::endl;

	for (int i = 0; i < MAPHEIGHT; ++i){
		file << "\t";

		for (int j = 0; j < MAPWIDTH; ++j){
			file << mapdata[(i*MAPWIDTH) + j] << ",";
		}
		std::cout << std::endl;
		file << std::endl;
	}

	file << "};" << std::endl;
	file.close();
}